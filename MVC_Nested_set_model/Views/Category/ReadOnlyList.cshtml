@model List<MVC_nested_set_model.Models.Category>
@{
    ViewBag.Title = "List";
}

@helper ListView(List<MVC_nested_set_model.Models.Category> categoryList, int depth)
{
    string typeClass = null;
    if (categoryList.Count() > 0)
    {
        depth++;
        @:<ul>
            foreach (var item in categoryList)
            {
                //jeśli jest liściem
                if (item.deeperList.Count == 0)
                {
                    typeClass = "leaf";
                }
                else
                {
                    typeClass = "node";
                }
                <li class="@typeClass" order="database" data-my-level="@depth">
                    @item.Name@DetailedMenu(item)
                    @ListView(item.deeperList, depth)
                </li>
            }
        @:</ul>
    }
}

@helper DetailedMenu(MVC_nested_set_model.Models.Category item)
{
    <div style="display: inline-block;" class="display-menu">
        @if (item.deeperList.Count > 1)
        {
            <a class="small-font sortButton" title="sort"><span class="glyphicon glyphicon-sort"></span></a>
        }
    </div>
}

@if (Model.Count() > 0)
{
    <h2>Here is your database structure as a list!</h2>
    <hr />
}
else
{
    <h2>Your data base is empty!</h2>
    <h3>You need admin privilages to add elements.</h3>
}

<div id="menu" order="random">
    @if (Model.Count() > 1)
    {
        <a id="sortAllButton">
            <span title="sort" class="glyphicon glyphicon-sort"></span>
        </a>
    }

    @if (Model.Count() > 0)
    {
        <a id="toggleAllButton">
            <span title="Toggle" class="glyphicon glyphicon-eye-open"></span>
        </a>
     }
</div>

<div id="listDiv">
    @ListView(Model, 0)
</div>

@section scripts
{
    @Scripts.Render("~/bundles/ListViewOnly")
}
