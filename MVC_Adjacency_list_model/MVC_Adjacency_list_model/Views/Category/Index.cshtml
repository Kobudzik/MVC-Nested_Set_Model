@model List<MVC_Adjacency_list_model.ViewModels.CategoryCarrierViewModel>


@helper TreeView(List<MVC_Adjacency_list_model.ViewModels.CategoryCarrierViewModel> categoryTree, int counter)
{
string leaf = null;
string leafSymbol = null;
if (categoryTree.Count() > 0)
{
    counter++;
        @:<ul>
            foreach (var item in categoryTree)
            {
                if (item.deeperList.Count == 0)
                {
                    leaf = "leaf";
                    leafSymbol = "🍀";
                }
                else
                {
                    leaf = null;
                    leafSymbol = null;
                }
                <li class="@leaf" title="@leaf" data-my-content="@item.Name" data-my-level="@counter"> @leafSymbol @item.Name@DisplayMenu(item)@*sprawdza dalej*@@TreeView(item.deeperList,counter)</li>
            }
        @:</ul>
    }

}



@helper DisplayMenu(MVC_Adjacency_list_model.ViewModels.CategoryCarrierViewModel item)
{<div style="display: inline-block;" class="display-menu">
        @*RENAME BUTTON*@
        @Html.ActionLink("✏️  ", "Rename", "Category", new { id = item.ID }, new { @class = "small-font", title = "Rename" })

        @*DELETE BUTTON*@
        <a class="small-font" title="Delete" href="javascript:deleteScript(@item.ID);">🗑️</a>

         @*//NEW_NODE BUTTON*@
        @Html.ActionLink("➕  ", "NewNode", "Category", new { id = item.ID }, new { @class = "small-font", title = "Add new" })

        @*//SORT BUTTON*@
        @if (item.deeperList.Count != 0)
        {
            <a class="small-font" id="newClick">sort</a>
        }
    </div>
}



<h2>Here is your structure as tree!</h2>
<button class="btn navbar-btn">@Html.ActionLink("️Move node", "DeleteById", "Category", null)</button>
<hr />


@Html.ActionLink("➕  ", "NewNode", "Category", new { id = 1 }, new { @class = "small-font" })
<a class="small-font" title="Toggle" id="toggleButton">[Toggle all]</a>
@*USE HELPER TO DISPLAY LIST*@
<div id="listDiv">
    @TreeView(Model,0)
</div>


@section scripts
{
    <script>
        //***********DELETING************\\
        function deleteScript(ID) {
            bootbox.confirm("Are you sure you want to delete this node?", function (bootboxResult) {
                if (bootboxResult) {
                    $.ajax({
                        url: "/api/category/" + ID,
                        method: "DELETE",
                        success: function (bootboxSucces) {
                            location.reload();
                        }
                    });
                }
            });
        }
        //***********DELETING************\\

        //***********TOGGLING_ALL************\\

        $("#toggleButton").click(function () {
            if ($('.subLink:visible').length)
                $('.subLink').hide("fast");
            else
                $('.subLink').show("fast");
        });
        //***********TOGGLING_ALL************\\




        $(document).ready(function () {
            //***********TOGGLING_SING:E************\\
            $('li:has(ul)').addClass('link');
            $('ul ul').addClass('subLink');

            $('ul li').click(function (toggle) {  // inserted callback param EVENT
                toggle.stopPropagation(); // stop click from bubbling up
                $(this).children('.subLink').toggle('slow');
            });


            //<a> (display menu) toggling fix
            $("#listDiv a").click(function (e) {
                e.stopPropagation();
            });
            //***********TOGGLING_SINGLE************\\
        });


        $('#newClick').click(function (toggle) {  // inserted callback param EVENT
            toggle.stopPropagation();
            $(this).first(".subLink").addClass("red");
            var inside = $("li:first-child");

            inside.each(function () {
                alert($(this).attr("data-my-content"));
            });

        });





    </script>
}