@model List<MVC_Adjacency_list_model.ViewModels.CategoryCarrierViewModel>


@helper TreeView(List<MVC_Adjacency_list_model.ViewModels.CategoryCarrierViewModel> categoryTree)
{

string leaf = null;
if (categoryTree.Count() > 0)
{
        @:<ul>
            foreach (var item in categoryTree)
    {
        if(item.deeperList.Count==0)
        {
            leaf = "leaf";
        }
        else
        {
            leaf = null;
        }
                    <li class="@leaf">
                        @item.Name
                        @DisplayMenu(item)
                        @*sprawdza dalej*@
                        @TreeView(item.deeperList)
                    </li>
            }
        @:</ul>
    }

}



@helper DisplayMenu(MVC_Adjacency_list_model.ViewModels.CategoryCarrierViewModel item)
{
    @Html.ActionLink("✏️  ", "Rename", "Category", new { id = item.ID }, new { @class = "small-font" })
    <a class="small-font" href="javascript:deleteScript(@item.ID);">🗑️</a>
    @Html.ActionLink("➕  ", "NewNode", "Category", new { id = item.ID }, new { @class = "small-font" })
    <a class="small-font" id="newClick">sortNew</a>

}



<h2>Here is tree structure saved using nested model</h2>
<button class="btn navbar-btn">@Html.ActionLink("️Move node", "DeleteById", "Category", null)</button>
<hr />


@Html.ActionLink("➕  ", "NewNode", "Category", new { id = 1 }, new { @class = "small-font" })
<ul id="00">
    @*pierwszy poziom*@
    @foreach (var item in Model)
    {
        string leaf = null;
        if (item.deeperList.Count == 0)
        {
            leaf = "leaf";
        }
        else
        {
            leaf = null;
        }
        <li class="@leaf">
            @item.Name
            @DisplayMenu(item)
            @TreeView(item.deeperList)
        </li>
    }
</ul>


@section scripts
{
    <script>
        //***********DELETING************\\
        function deleteScript(ID) {
            bootbox.confirm("Are you sure you want to delete this node?", function (bootboxResult) {
                if (bootboxResult) {
                    $.ajax({
                        url: "/api/category/" + ID,
                        method: "DELETE",
                        success: function (bootboxSucces) {
                            location.reload();
                        }
                    });
                }
            });
        }
        //***********DELETING************\\

        $(document).ready(function () {
            //***********TOGGLING************\\
            $('li:has(ul)').addClass('link');
            $('ul ul').addClass('subLink');

            $('ul li').click(function (toggle) {  // inserted callback param EVENT
                toggle.stopPropagation(); // stop click from bubbling up
                $(this).children('.subLink').toggle('slow');
            });



            //<a> toggling fix
            $("#00 a").click(function (e) {
                e.stopPropagation();
            });
            //***********TOGGLING************\\





        });

        $('#newClick').click(function (toggle) {  // inserted callback param EVENT
            toggle.stopPropagation(); // stop click from bubbling up
            $("#00 :first-child li").addClass("red");
        });





    </script>
}